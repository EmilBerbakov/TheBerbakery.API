// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace TheBerbakery.API.Models;

public partial class TheBerbakeryContext : DbContext
{
    public TheBerbakeryContext(DbContextOptions<TheBerbakeryContext> options)
        : base(options)
    {
    }

    public virtual DbSet<RecipeIngredients> RecipeIngredients { get; set; }

    public virtual DbSet<RecipeSteps> RecipeSteps { get; set; }

    public virtual DbSet<Recipes> Recipes { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_general_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<RecipeIngredients>(entity =>
        {
            entity.HasKey(e => new { e.RecipeId, e.IngredientId })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.ToTable("recipe_ingredients", tb => tb.HasComment("Ingredients for a specific recipe\r\nWhen a recipe is deleted, all recipe steps and ingredients associated with the deleted recipe are also deleted"));

            entity.Property(e => e.RecipeId)
                .HasColumnType("int(11)")
                .HasColumnName("recipe_id");
            entity.Property(e => e.IngredientId)
                .HasColumnType("int(11)")
                .HasColumnName("ingredient_id");
            entity.Property(e => e.IngredientDescription)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("ingredient_description");

            entity.HasOne(d => d.Recipe).WithMany(p => p.RecipeIngredients)
                .HasForeignKey(d => d.RecipeId)
                .HasConstraintName("recipe_ingredients_FK");
        });

        modelBuilder.Entity<RecipeSteps>(entity =>
        {
            entity.HasKey(e => new { e.RecipeId, e.RecipeStep })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.ToTable("recipe_steps", tb => tb.HasComment("Steps for a recipe:\r\nrecipie_id is a foreign key to recipe_id in recipes\r\nrecipe_step is used to order the recipe steps"));

            entity.Property(e => e.RecipeId)
                .HasColumnType("int(11)")
                .HasColumnName("recipe_id");
            entity.Property(e => e.RecipeStep)
                .HasColumnType("int(11)")
                .HasColumnName("recipe_step");
            entity.Property(e => e.RecipeStepInstruction)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("recipe_step_instruction");

            entity.HasOne(d => d.Recipe).WithMany(p => p.RecipeSteps)
                .HasForeignKey(d => d.RecipeId)
                .HasConstraintName("recipe_steps_FK");
        });

        modelBuilder.Entity<Recipes>(entity =>
        {
            entity.HasKey(e => e.RecipeId).HasName("PRIMARY");

            entity.ToTable("recipes", tb => tb.HasComment("Table that stores general information about a recipe"));

            entity.Property(e => e.RecipeId)
                .HasComment("unique numeric id for a recipe")
                .HasColumnType("int(11)")
                .HasColumnName("recipe_id");
            entity.Property(e => e.RecipeBlurb)
                .HasComment("Any sort of Blogpost-like blurb you want to include on the recipe page.")
                .HasColumnType("text")
                .HasColumnName("recipe_blurb");
            entity.Property(e => e.RecipeDescription)
                .IsRequired()
                .HasMaxLength(280)
                .HasComment("A Tweet's length description of the recipe.")
                .HasColumnName("recipe_description");
            entity.Property(e => e.RecipeImageUrl)
                .IsRequired()
                .HasMaxLength(4000)
                .HasComment("URL pointing to the picture of the recipe")
                .HasColumnName("recipe_image_url");
            entity.Property(e => e.RecipeName)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("the name of the recipe")
                .HasColumnName("recipe_name");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}